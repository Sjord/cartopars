
WHITESPACE = _{ " " | "\n" | "\t" | "\u{a0}" }
COMMENT = _{ ("//" ~ (!NEWLINE ~ ANY)*) | "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "-" | "_")* }

instance = { identifier }
property = { identifier }

// missing "*"
// missing -foo
declaration = { (instance ~ "/")? ~ property ~ ":" ~ values }

value = { url | boolean | string_expr | percentage | expression | color | function | keyword | field }

field = { "[" ~ identifier ~ "]" }

function = { identifier ~ "(" ~ value ~ ("," ~ value)* ~ ")" }

// name these better
expression = { exp_term ~ "+" ~ expression | exp_term ~ "-" ~ expression | exp_term }
exp_term = { factor ~ "*" ~ exp_term | factor ~ "/" ~ exp_term | factor }
factor = { "(" ~ expression ~ ")" | number | variable }

string_expr = { (string | field) ~ ("+" ~ (string | field))* }

boolean = { "true" | "false" }

variable = @{ "@" ~ identifier }

keyword = { identifier }


percentage = { number ~ "%" }

// stringchar = { escape | latin1 | [ !#$%&(-~] }
// handle backslashes
// stringchar = { " " | "!" | "#" | "$" | "%" | "&" | '('..'~' }
// string = @{ "\"" ~ (stringchar | "'")* ~ "\"" | "'" ~ (stringchar | "\"")* ~ "'"}
string_body = @{ (!PEEK ~ ANY)* }
string = ${ PUSH("'" | "\"") ~ string_body ~ POP}

// Comma separated list of values
values = { value ~ ("," ~ value)* }

// missing 2e3
// don't allow starting with 0
// interpret hex or octal numbers?
number = { "-"? ~ ('0'..'9'+ ~ ("." ~ '0'..'9'*)?) | ("." ~ '0'..'9'+) }
color = { color_hex_long | color_hex_short | color_function | color_keyword }
color_hex_short = @{ "#" ~ ASCII_HEX_DIGIT{3} }
color_hex_long = @{ "#" ~ ASCII_HEX_DIGIT{6} }

unquoted_url =  { ("!" | "#" | "$" | "%" | "&" | '*'..'~')* }
url_value = { string | unquoted_url }
url = { "url(" ~ url_value ~ ")" }

// optionally set number of arguments
color_function = { color_function_name ~ "(" ~ number ~ ("," ~ number){2,3} ~ ")" }
// hsluva ?
color_function_name = { "rgba" | "rgb" | "hsla" | "hsl" }

color_keyword = { "aliceblue" | "antiquewhite" | "aqua" | "aquamarine" | "azure" | "beige" | "bisque" | "black" | "blanchedalmond" | "blue" | "blueviolet" | "brown" | "burlywood" | "cadetblue" | "chartreuse" | "chocolate" | "coral" | "cornflowerblue" | "cornsilk" | "crimson" | "cyan" | "darkblue" | "darkcyan" | "darkgoldenrod" | "darkgray" | "darkgreen" | "darkgrey" | "darkkhaki" | "darkmagenta" | "darkolivegreen" | "darkorange" | "darkorchid" | "darkred" | "darksalmon" | "darkseagreen" | "darkslateblue" | "darkslategrey" | "darkturquoise" | "darkviolet" | "deeppink" | "deepskyblue" | "dimgray" | "dimgrey" | "dodgerblue" | "firebrick" | "floralwhite" | "forestgreen" | "fuchsia" | "gainsboro" | "ghostwhite" | "gold" | "goldenrod" | "gray" | "grey" | "green" | "greenyellow" | "honeydew" | "hotpink" | "indianred" | "indigo" | "ivory" | "khaki" | "lavender" | "lavenderblush" | "lawngreen" | "lemonchiffon" | "lightblue" | "lightcoral" | "lightcyan" | "lightgoldenrodyellow" | "lightgray" | "lightgreen" | "lightgrey" | "lightpink" | "lightsalmon" | "lightseagreen" | "lightskyblue" | "lightslategray" | "lightslategrey" | "lightsteelblue" | "lightyellow" | "lime" | "limegreen" | "linen" | "magenta" | "maroon" | "mediumaquamarine" | "mediumblue" | "mediumorchid" | "mediumpurple" | "mediumseagreen" | "mediumslateblue" | "mediumspringgreen" | "mediumturquoise" | "mediumvioletred" | "midnightblue" | "mintcream" | "mistyrose" | "moccasin" | "navajowhite" | "navy" | "oldlace" | "olive" | "olivedrab" | "orange" | "orangered" | "orchid" | "palegoldenrod" | "palegreen" | "paleturquoise" | "palevioletred" | "papayawhip" | "peachpuff" | "peru" | "pink" | "plum" | "powderblue" | "purple" | "red" | "rosybrown" | "royalblue" | "saddlebrown" | "salmon" | "sandybrown" | "seagreen" | "seashell" | "sienna" | "silver" | "skyblue" | "slateblue" | "slategray" | "slategrey" | "snow" | "springgreen" | "steelblue" | "tan" | "teal" | "thistle" | "tomato" | "turquoise" | "violet" | "wheat" | "white" | "whitesmoke" | "yellow" | "yellowgreen" | "transparent" }


comparison = { "!=" | ">=" | ">" | "=~" | "=" | "<=" | "<" }
layer = @{ "#" ~ identifier }
class = @{ "." ~ identifier }
attachment = @{ "::" ~ identifier}
// support expressions, strings, variables, etc.
filter = { "[" ~ ( identifier | string ) ~ comparison ~ (number | string | boolean | "null") ~ "]" }
// Allow just one attachment
selector = { ("Map" | layer | class | filter | attachment)+ }

declarations = { declaration ~ (";" ~ declaration?)* } 

// apparently [a=b],{ is valid
// ruleset = { selector ~ ("," ~ selector)* ~ ","? ~ "{" ~ (declarations | ruleset)* ~ "}" }
selectors = { selector ~ ("," ~ selector)* } 
ruleset_body = { (declarations | ruleset)* }
ruleset = { selectors ~ ","? ~ "{" ~ ruleset_body ~ "}" }

assignment = { variable ~ ":" ~ values ~ ";" }

statement = { assignment | ruleset }

stylesheet = { SOI ~ statement* ~ EOI }
